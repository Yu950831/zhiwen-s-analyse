}
## clean the final data
USP7_result <-USP7_6vs %>% select(2,7,8,10,11)
cleaned_result <- Tpp1_result[1,]
for (entry in 1:nrow(Tpp1_result)-5) {
if (entry%%6==1) {single_result <- Tpp1_result[entry,]
cleaned_result_USP7 <- rbind(cleaned_result,single_result)
}
}
cleaned_result_USP7 <- cleaned_result[-1,]
cleaned_result_USP7
for (proteins in sum_USP7$Var1[-1]) {
USP7_6vs_R <- USP7_6 %>%
filter(USP7_6$Accession==proteins) %>%
mutate(var=var(USP7_6vs_R$distance)) %>%
mutate(sd=sd(USP7_6vs_R$distance))
USP7_6vs <- rbind(USP7_6vs,USP7_6vs_R)
}
View(USP7_6vs)
### now we have a different ideal.we calculate the center of each unique protein
### that identified by the accession numbers. we compute all the centers and
### the distance of each point to its' center.Finally we get the SD of the distance
### for each protein. we set a standard to evaluate if this protein have some connection
### to TPP1
### initial settings
library(tidyverse)
library(ggplot2)
## we got the data yesterday in (inner_group.R)
sum_Tpp1 <- as.data.frame(table(TPP1_final$Accession)) %>%
filter(sum_Tpp1$Freq == 5)
## we get the head of the data we want.
TPP1_5 <- TPP1_final %>% filter(TPP1_final$Accession =='O95831')
cov_mean <- c(TPP1_5$coverage)
PSMs_mean <- c(TPP1_5$PSMs)
TPP1_5 <- TPP1_5 %>% mutate(coverage_mean=mean(cov_mean))
TPP1_5 <- TPP1_5 %>% mutate(PSMs_mean=mean(PSMs_mean))
## calculate the center of each unique protein
for (proteins in sum_Tpp1$Var1[-1]) {
TPP1_5_R <- TPP1_final %>%
filter(TPP1_final$Accession == proteins)
cov_mean_R <- c(TPP1_5_R$coverage)
PSMs_mean_R <- c(TPP1_5_R$PSMs)
TPP1_5_R <- TPP1_5_R %>% mutate(coverage_mean=mean(cov_mean_R))
TPP1_5_R <- TPP1_5_R %>% mutate(PSMs_mean=mean(PSMs_mean_R))
TPP1_5 <- rbind(TPP1_5,TPP1_5_R)
}
## the distance of each point to it's center
TPP1_5 <- TPP1_5 %>%
mutate(TPP1_5,distance= sqrt((coverage-coverage_mean)^2+(PSMs-PSMs_mean)^2))
## add the Var and SD calculation
## firstly we create a head for the file
TPP1_5vs <- TPP1_5[1:5,] %>%
mutate(var=var(distance)) %>%
mutate(sd=sd(distance))
## the we use a for loop to calculate the proteins' Var and SD respectively
for (proteins in sum_Tpp1$Var1[-1]) {
TPP1_5vs_R <- TPP1_5 %>%
filter(TPP1_5$Accession==proteins) %>%
mutate(var=var(TPP1_5vs_R$distance)) %>%
mutate(sd=sd(TPP1_5vs_R$distance))
TPP1_5vs <- rbind(TPP1_5vs,TPP1_5vs_R)
}
## clean the final data
Tpp1_result <-TPP1_5vs %>% select(2,7,8,10,11)
cleaned_result <- Tpp1_result[1,]
for (entry in 1:nrow(Tpp1_result)-4) {
if (entry%%5==1) {single_result <- Tpp1_result[entry,]
cleaned_result <- rbind(cleaned_result,single_result)
}
}
cleaned_result <- cleaned_result[-1,]
cleaned_result
sum_Tpp1 <- as.data.frame(table(TPP1_final$Accession))
sum_USP7 <- as.data.frame(table(USP7_final$Accession))
sum_USP7 <- as.data.frame(table(USP7_final$Accession)) %>%
filter(sum_USP7$Freq == 6)
USP7_6 <- USP7_final %>% filter(USP7_final$Accession =='B5ME19')
cov_mean <- c(USP7_6$coverage)
PSMs_mean <- c(USP7_6$PSMs)
USP7_6 <- USP7_6 %>% mutate(coverage_mean=mean(cov_mean))
USP7_6 <- USP7_6 %>% mutate(PSMs_mean=mean(PSMs_mean))
for (proteins in sum_USP7$Var1[-1]) {
USP7_6_R <- USP7_final %>%
filter(USP7_final$Accession == proteins)
cov_mean_R <- c(USP7_6_R$coverage)
PSMs_mean_R <- c(USP7_6_R$PSMs)
USP7_6_R <- USP7_6_R %>% mutate(coverage_mean=mean(cov_mean_R))
USP7_6_R <- USP7_6_R %>% mutate(PSMs_mean=mean(PSMs_mean_R))
USP7_6 <- rbind(USP7_6,USP7_6_R)
}
## the distance of each point to it's center
USP7_6 <- USP7_6 %>%
mutate(USP7_6,distance= sqrt((coverage-coverage_mean)^2+(PSMs-PSMs_mean)^2))
USP7_6vs <- USP7_6[1:6,] %>%
mutate(var=var(distance)) %>%
mutate(sd=sd(distance))
for (proteins in sum_USP7$Var1[-1]) {
USP7_6vs_R <- USP7_6 %>%
filter(USP7_6$Accession==proteins) %>%
mutate(var=var(USP7_6vs_R$distance)) %>%
mutate(sd=sd(USP7_6vs_R$distance))
USP7_6vs <- rbind(USP7_6vs,USP7_6vs_R)
}
for (proteins in sum_USP7$Var1[-1]) {
USP7_6vs_R <- USP7_6 %>%
filter(USP7_6$Accession==proteins)
for (proteins in sum_USP7$Var1[-1]) {
USP7_6vs_R <- USP7_6 %>%
filter(USP7_6$Accession==proteins)}
for (proteins in sum_USP7$Var1[-1]) {
USP7_6vs_R <- USP7_6 %>%
filter(USP7_6$Accession==proteins)}
for (proteins in sum_USP7$Var1[-1]) {
USP7_6vs_R <- USP7_6 %>%
filter(USP7_6$Accession==proteins) %>%
mutate(var=var(USP7_6vs_R$distance)) %>%
mutate(sd=sd(USP7_6vs_R$distance))
USP7_6vs <- rbind(USP7_6vs,USP7_6vs_R)
}
USP7_result <-USP7_6vs %>% select(2,7,8,10,11)
cleaned_result <- Tpp1_result[1,]
for (entry in 1:nrow(Tpp1_result)-5) {
if (entry%%6==1) {single_result <- Tpp1_result[entry,]
cleaned_result_USP7 <- rbind(cleaned_result,single_result)
}
}
cleaned_result_USP7 <- cleaned_result[-1,]
cleaned_result_USP7
View(USP7_result)
View(cleaned_result_USP7)
USP7_result <-USP7_6vs %>% select(2,7,8,10,11)
cleaned_result <- Tpp1_result[1,]
for (entry in 1:nrow(Tpp1_result)-5) {
if (entry%%6==1) {single_result <- Tpp1_result[entry,]
cleaned_result_USP7 <- rbind(cleaned_result,single_result)
}
}
cleaned_result_USP7 <- cleaned_result[-1,]
cleaned_result_USP7
USP7_result <-USP7_6vs %>% select(2,7,8,10,11)
cleaned_result <- USP7_result[1,]
for (entry in 1:nrow(USP7_result)-5) {
if (entry%%6==1) {single_result <- Tpp1_result[entry,]
cleaned_result_USP7 <- rbind(cleaned_result,single_result)
}
}
cleaned_result_USP7 <- cleaned_result[-1,]
cleaned_result_USP7
cleaned_result <- USP7_result[1,]
View(cleaned_result)
USP7_result <-USP7_6vs %>% select(2,7,8,10,11)
cleaned_result <- USP7_result[1,]
for (entry in 1:nrow(USP7_result)-5) {
if (entry%%6==1) {single_result <- USP7_result[entry,]
cleaned_result_USP7 <- rbind(cleaned_result,single_result)
}
}
cleaned_result_USP7 <- cleaned_result[-1,]
cleaned_result_USP7
View(single_result)
USP7_result <-USP7_6vs %>% select(2,7,8,10,11)
cleaned_result <- USP7_result[1,]
for (entry in 1:nrow(USP7_result)-5) {
if (entry%%6==1) {single_result <- USP7_result[entry,]
cleaned_result_USP7 <- rbind(cleaned_result,single_result)
}
}
for (entry in 1:nrow(USP7_result)-5) {
print(entry)}
for (entry in 1:nrow(USP7_result)-5) {
if (entry%%6==1) {print(entry)
}}
for (entry in 1:nrow(USP7_result)-5) {
if (entry%%6==1) {print(USP7_result[entry],)
}}
for (entry in 1:nrow(USP7_result)-5) {
if (entry%%6==1) {print(USP7_result[entry])
}}
for (entry in 1:nrow(USP7_result)-5) {
if (entry%%6==1) {print(USP7_result[entry],)
}}
### now we have a different ideal.we calculate the center of each unique protein
### that identified by the accession numbers. we compute all the centers and
### the distance of each point to its' center.Finally we get the SD of the distance
### for each protein. we set a standard to evaluate if this protein have some connection
### to TPP1
### initial settings
library(tidyverse)
library(ggplot2)
## we got the data yesterday in (inner_group.R)
sum_Tpp1 <- as.data.frame(table(TPP1_final$Accession)) %>%
filter(sum_Tpp1$Freq == 5)
## we get the head of the data we want.
TPP1_5 <- TPP1_final %>% filter(TPP1_final$Accession =='O95831')
cov_mean <- c(TPP1_5$coverage)
PSMs_mean <- c(TPP1_5$PSMs)
TPP1_5 <- TPP1_5 %>% mutate(coverage_mean=mean(cov_mean))
TPP1_5 <- TPP1_5 %>% mutate(PSMs_mean=mean(PSMs_mean))
## calculate the center of each unique protein
for (proteins in sum_Tpp1$Var1[-1]) {
TPP1_5_R <- TPP1_final %>%
filter(TPP1_final$Accession == proteins)
cov_mean_R <- c(TPP1_5_R$coverage)
PSMs_mean_R <- c(TPP1_5_R$PSMs)
TPP1_5_R <- TPP1_5_R %>% mutate(coverage_mean=mean(cov_mean_R))
TPP1_5_R <- TPP1_5_R %>% mutate(PSMs_mean=mean(PSMs_mean_R))
TPP1_5 <- rbind(TPP1_5,TPP1_5_R)
}
## the distance of each point to it's center
TPP1_5 <- TPP1_5 %>%
mutate(TPP1_5,distance= sqrt((coverage-coverage_mean)^2+(PSMs-PSMs_mean)^2))
## add the Var and SD calculation
## firstly we create a head for the file
TPP1_5vs <- TPP1_5[1:5,] %>%
mutate(var=var(distance)) %>%
mutate(sd=sd(distance))
## the we use a for loop to calculate the proteins' Var and SD respectively
for (proteins in sum_Tpp1$Var1[-1]) {
TPP1_5vs_R <- TPP1_5 %>%
filter(TPP1_5$Accession==proteins) %>%
mutate(var=var(TPP1_5vs_R$distance)) %>%
mutate(sd=sd(TPP1_5vs_R$distance))
TPP1_5vs <- rbind(TPP1_5vs,TPP1_5vs_R)
}
## clean the final data
Tpp1_result <-TPP1_5vs %>% select(2,7,8,10,11)
cleaned_result <- Tpp1_result[1,]
for (entry in 1:nrow(Tpp1_result)-4) {
if (entry%%5==1) {single_result <- Tpp1_result[entry,]
cleaned_result <- rbind(cleaned_result,single_result)
}
}
cleaned_result <- cleaned_result[-1,]
cleaned_result
for (entry in 1:nrow(USP7_result)-5) {
if (entry%%6==1) {print(USP7_result[entry],)
}}
for (entry in 1:nrow(USP7_result)-5) {
if (entry%%6==1) {print(USP7_result[entry,])
}}
for (entry in 1:nrow(USP7_result)-5) {
if (entry%%6==1) {single_result <- USP7_result[entry,]
cleaned_result_USP7 <- rbind(cleaned_result,single_result)
}
}
cleaned_result_USP7 <- cleaned_result[-1,]
cleaned_result_USP7
### after the TPp1 protein's data been soved then comes the USP7
### now we use the same code
### initial settings
library(tidyverse)
library(ggplot2)
library(dplyr)
## we got the data yesterday in (inner_group.R)
names(USP7_final) <- c('confidence','Accession','coverage','PSMs','sample','protein')
sum_USP7 <- as.data.frame(table(USP7_final$Accession)) %>%
filter(sum_USP7$Freq == 6)
## we get the head of the data we want.
USP7_6 <- USP7_final %>% filter(USP7_final$Accession =='B5ME19')
cov_mean <- c(USP7_6$coverage)
PSMs_mean <- c(USP7_6$PSMs)
USP7_6 <- USP7_6 %>% mutate(coverage_mean=mean(cov_mean))
USP7_6 <- USP7_6 %>% mutate(PSMs_mean=mean(PSMs_mean))
## calculate the center of each unique protein
for (proteins in sum_USP7$Var1[-1]) {
USP7_6_R <- USP7_final %>%
filter(USP7_final$Accession == proteins)
cov_mean_R <- c(USP7_6_R$coverage)
PSMs_mean_R <- c(USP7_6_R$PSMs)
USP7_6_R <- USP7_6_R %>% mutate(coverage_mean=mean(cov_mean_R))
USP7_6_R <- USP7_6_R %>% mutate(PSMs_mean=mean(PSMs_mean_R))
USP7_6 <- rbind(USP7_6,USP7_6_R)
}
## the distance of each point to it's center
USP7_6 <- USP7_6 %>%
mutate(USP7_6,distance= sqrt((coverage-coverage_mean)^2+(PSMs-PSMs_mean)^2))
## add the Var and SD calculation
## firstly we create a head for the file
USP7_6vs <- USP7_6[1:6,] %>%
mutate(var=var(distance)) %>%
mutate(sd=sd(distance))
## the we use a for loop to calculate the proteins' Var and SD respectively
for (proteins in sum_USP7$Var1[-1]) {
USP7_6vs_R <- USP7_6 %>%
filter(USP7_6$Accession==proteins) %>%
mutate(var=var(USP7_6vs_R$distance)) %>%
mutate(sd=sd(USP7_6vs_R$distance))
USP7_6vs <- rbind(USP7_6vs,USP7_6vs_R)
}
## clean the final data
USP7_result <-USP7_6vs %>% select(2,7,8,10,11)
cleaned_result <- USP7_result[1,]
for (entry in 1:nrow(USP7_result)-5) {
if (entry%%6==1) {single_result <- USP7_result[entry,]
cleaned_result_USP7 <- rbind(cleaned_result,single_result)
}
}
cleaned_result_USP7 <- cleaned_result[-1,]
cleaned_result_USP7
### after the TPp1 protein's data been soved then comes the USP7
### now we use the same code
### initial settings
library(tidyverse)
library(ggplot2)
library(dplyr)
## we got the data yesterday in (inner_group.R)
names(USP7_final) <- c('confidence','Accession','coverage','PSMs','sample','protein')
sum_USP7 <- as.data.frame(table(USP7_final$Accession)) %>%
filter(sum_USP7$Freq == 6)
## we get the head of the data we want.
USP7_6 <- USP7_final %>% filter(USP7_final$Accession =='B5ME19')
cov_mean <- c(USP7_6$coverage)
PSMs_mean <- c(USP7_6$PSMs)
USP7_6 <- USP7_6 %>% mutate(coverage_mean=mean(cov_mean))
USP7_6 <- USP7_6 %>% mutate(PSMs_mean=mean(PSMs_mean))
## calculate the center of each unique protein
for (proteins in sum_USP7$Var1[-1]) {
USP7_6_R <- USP7_final %>%
filter(USP7_final$Accession == proteins)
cov_mean_R <- c(USP7_6_R$coverage)
PSMs_mean_R <- c(USP7_6_R$PSMs)
USP7_6_R <- USP7_6_R %>% mutate(coverage_mean=mean(cov_mean_R))
USP7_6_R <- USP7_6_R %>% mutate(PSMs_mean=mean(PSMs_mean_R))
USP7_6 <- rbind(USP7_6,USP7_6_R)
}
## the distance of each point to it's center
USP7_6 <- USP7_6 %>%
mutate(USP7_6,distance= sqrt((coverage-coverage_mean)^2+(PSMs-PSMs_mean)^2))
## add the Var and SD calculation
## firstly we create a head for the file
USP7_6vs <- USP7_6[1:6,] %>%
mutate(var=var(distance)) %>%
mutate(sd=sd(distance))
## the we use a for loop to calculate the proteins' Var and SD respectively
for (proteins in sum_USP7$Var1[-1]) {
USP7_6vs_R <- USP7_6 %>%
filter(USP7_6$Accession==proteins) %>%
mutate(var=var(USP7_6vs_R$distance)) %>%
mutate(sd=sd(USP7_6vs_R$distance))
USP7_6vs <- rbind(USP7_6vs,USP7_6vs_R)
}
## clean the final data
USP7_result <-USP7_6vs %>% select(2,7,8,10,11)
cleaned_result <- USP7_result[1,]
for (entry in 1:nrow(USP7_result)-5) {
if (entry%%6==1) {single_result <- USP7_result[entry,]
cleaned_result_USP7 <- rbind(cleaned_result,single_result)
}
}
cleaned_result_USP7 <- cleaned_result_USP7[-1,]
cleaned_result_USP7
### after the TPp1 protein's data been soved then comes the USP7
### now we use the same code
### initial settings
library(tidyverse)
library(ggplot2)
library(dplyr)
## we got the data yesterday in (inner_group.R)
names(USP7_final) <- c('confidence','Accession','coverage','PSMs','sample','protein')
sum_USP7 <- as.data.frame(table(USP7_final$Accession)) %>%
filter(sum_USP7$Freq == 6)
## we get the head of the data we want.
USP7_6 <- USP7_final %>% filter(USP7_final$Accession =='B5ME19')
cov_mean <- c(USP7_6$coverage)
PSMs_mean <- c(USP7_6$PSMs)
USP7_6 <- USP7_6 %>% mutate(coverage_mean=mean(cov_mean))
USP7_6 <- USP7_6 %>% mutate(PSMs_mean=mean(PSMs_mean))
## calculate the center of each unique protein
for (proteins in sum_USP7$Var1[-1]) {
USP7_6_R <- USP7_final %>%
filter(USP7_final$Accession == proteins)
cov_mean_R <- c(USP7_6_R$coverage)
PSMs_mean_R <- c(USP7_6_R$PSMs)
USP7_6_R <- USP7_6_R %>% mutate(coverage_mean=mean(cov_mean_R))
USP7_6_R <- USP7_6_R %>% mutate(PSMs_mean=mean(PSMs_mean_R))
USP7_6 <- rbind(USP7_6,USP7_6_R)
}
## the distance of each point to it's center
USP7_6 <- USP7_6 %>%
mutate(USP7_6,distance= sqrt((coverage-coverage_mean)^2+(PSMs-PSMs_mean)^2))
## add the Var and SD calculation
## firstly we create a head for the file
USP7_6vs <- USP7_6[1:6,] %>%
mutate(var=var(distance)) %>%
mutate(sd=sd(distance))
## the we use a for loop to calculate the proteins' Var and SD respectively
for (proteins in sum_USP7$Var1[-1]) {
USP7_6vs_R <- USP7_6 %>%
filter(USP7_6$Accession==proteins) %>%
mutate(var=var(USP7_6vs_R$distance)) %>%
mutate(sd=sd(USP7_6vs_R$distance))
USP7_6vs <- rbind(USP7_6vs,USP7_6vs_R)
}
## clean the final data
USP7_result <-USP7_6vs %>% select(2,7,8,10,11)
cleaned_result <- USP7_result[1,]
for (entry in 1:nrow(USP7_result)-5) {
if (entry%%6==1) {single_result <- USP7_result[entry,]
cleaned_result_USP7 <- rbind(cleaned_result,single_result)
}
}
sum_USP7 <- as.data.frame(table(USP7_final$Accession))
filter(sum_USP7$Freq == 6)
sum_USP7 <- as.data.frame(table(USP7_final$Accession)) %>%
filter(sum_USP7$Freq == 6)
USP7_6 <- USP7_final %>% filter(USP7_final$Accession =='B5ME19')
cov_mean <- c(USP7_6$coverage)
PSMs_mean <- c(USP7_6$PSMs)
USP7_6 <- USP7_6 %>% mutate(coverage_mean=mean(cov_mean))
USP7_6 <- USP7_6 %>% mutate(PSMs_mean=mean(PSMs_mean))
## calculate the center of each unique protein
for (proteins in sum_USP7$Var1[-1]) {
USP7_6_R <- USP7_final %>%
filter(USP7_final$Accession == proteins)
cov_mean_R <- c(USP7_6_R$coverage)
PSMs_mean_R <- c(USP7_6_R$PSMs)
USP7_6_R <- USP7_6_R %>% mutate(coverage_mean=mean(cov_mean_R))
USP7_6_R <- USP7_6_R %>% mutate(PSMs_mean=mean(PSMs_mean_R))
USP7_6 <- rbind(USP7_6,USP7_6_R)
}
## the distance of each point to it's center
USP7_6 <- USP7_6 %>%
mutate(USP7_6,distance= sqrt((coverage-coverage_mean)^2+(PSMs-PSMs_mean)^2))
## add the Var and SD calculation
## firstly we create a head for the file
USP7_6vs <- USP7_6[1:6,] %>%
mutate(var=var(distance)) %>%
mutate(sd=sd(distance))
## the we use a for loop to calculate the proteins' Var and SD respectively
for (proteins in sum_USP7$Var1[-1]) {
USP7_6vs_R <- USP7_6 %>%
filter(USP7_6$Accession==proteins) %>%
mutate(var=var(USP7_6vs_R$distance)) %>%
mutate(sd=sd(USP7_6vs_R$distance))
USP7_6vs <- rbind(USP7_6vs,USP7_6vs_R)
}
## clean the final data
USP7_result <-USP7_6vs %>% select(2,7,8,10,11)
cleaned_result <- USP7_result[1,]
for (entry in 1:nrow(USP7_result)-5) {
if (entry%%6==1) {single_result <- USP7_result[entry,]
cleaned_result_USP7 <- rbind(cleaned_result,single_result)
}
}
USP7_6 <- USP7_final %>% filter(USP7_final$Accession =='B5ME19')
cov_mean <- c(USP7_6$coverage)
PSMs_mean <- c(USP7_6$PSMs)
USP7_6 <- USP7_6 %>% mutate(coverage_mean=mean(cov_mean))
USP7_6 <- USP7_6 %>% mutate(PSMs_mean=mean(PSMs_mean))
## calculate the center of each unique protein
for (proteins in sum_USP7$Var1[-1]) {
USP7_6_R <- USP7_final %>%
filter(USP7_final$Accession == proteins)
cov_mean_R <- c(USP7_6_R$coverage)
PSMs_mean_R <- c(USP7_6_R$PSMs)
USP7_6_R <- USP7_6_R %>% mutate(coverage_mean=mean(cov_mean_R))
USP7_6_R <- USP7_6_R %>% mutate(PSMs_mean=mean(PSMs_mean_R))
USP7_6 <- rbind(USP7_6,USP7_6_R)
}
## the distance of each point to it's center
USP7_6 <- USP7_6 %>%
mutate(USP7_6,distance= sqrt((coverage-coverage_mean)^2+(PSMs-PSMs_mean)^2))
## add the Var and SD calculation
## firstly we create a head for the file
USP7_6vs <- USP7_6[1:6,] %>%
mutate(var=var(distance)) %>%
mutate(sd=sd(distance))
## the we use a for loop to calculate the proteins' Var and SD respectively
for (proteins in sum_USP7$Var1[-1]) {
USP7_6vs_R <- USP7_6 %>%
filter(USP7_6$Accession==proteins) %>%
mutate(var=var(USP7_6vs_R$distance)) %>%
mutate(sd=sd(USP7_6vs_R$distance))
USP7_6vs <- rbind(USP7_6vs,USP7_6vs_R)
}
## clean the final data
USP7_result <-USP7_6vs %>% select(2,7,8,10,11)
cleaned_result <- USP7_result[1,]
for (entry in 1:nrow(USP7_result)-5) {
if (entry%%6==1) {single_result <- USP7_result[entry,]
cleaned_result_USP7 <- rbind(cleaned_result,single_result)
}
}
USP7_result <-USP7_6vs %>% select(2,7,8,10,11)
cleaned_result <- USP7_result[1,]
for (entry in 1:nrow(USP7_result)-5) {
if (entry%%6==1) {single_result <- USP7_result[entry,]
cleaned_result_USP7 <- rbind(cleaned_result,single_result)
}
}
USP7_result <-USP7_6vs %>% select(2,7,8,10,11)
cleaned_result <- USP7_result[1,]
for (entry in 1:nrow(USP7_result)-5) {
if (entry%%6==1) {single_result <- USP7_result[entry,]
print(single_result)}}
USP7_result <-USP7_6vs %>% select(2,7,8,10,11)
cleaned_result <- USP7_result[1,]
for (entry in 1:nrow(USP7_result)-5) {
if (entry%%6==1) {single_result <- USP7_result[entry,]
cleaned_result_USP7 <- rbind(cleaned_result,single_result)}}
for (entry in 1:nrow(USP7_result)-5) {
if (entry%%6==1) {
cleaned_result_USP7 <- rbind(cleaned_result,USP7_result[entry,])}}
for (entry in 1:nrow(USP7_result)-5) {
if (entry%%6==1) {
print(USP7_result[entry,])}}
for (entry in 1:nrow(USP7_result)-5) {
if (entry%%6==1) {cleaned_result_USP7 <- rbind(cleaned_result,USP7_result[entry,])}}
nrow(USP7_result)-5
View(cleaned_result_USP7)
View(cleaned_result)
View(cleaned_result)
