}
for (filenames in 2:3) {
new.data <- read_xlsx(dirUSP7b[filenames])
Temp4 <- rbind(Temp4,new.data)
}
USP7_all <- rbind(Temp3,Temp4)
### finally the blank samples
for (filenames in 2:3) {
new.data <- read_xlsx(dirBLANka[filenames])
Temp5 <- rbind(Temp5,new.data)
}
for (filenames in 2:3) {
new.data <- read_xlsx(dirBLANkb[filenames])
Temp6 <- rbind(Temp6,new.data)
}
Blank_all <- rbind(Temp5,Temp6)
## select the data we need and add some labels for the color of the later plot
## firstly the TPP1 data
TPP1_final <- TPP1_all %>%
select(1,2,5,7) %>%
mutate(protein= 'TPP1') %>%
filter(`Protein FDR Confidence` == 'High')
## then the USP7 data
USP7_final <- USP7_all %>%
select(1,2,5,7) %>%
mutate(protein = 'USP7') %>%
filter(`Protein FDR Confidence` == 'High')
## finally the BLANK samples
Blank_final <- Blank_all %>%
select(1,2,5,7) %>%
mutate(protein = 'Blank') %>%
filter(`Protein FDR Confidence` == 'High')
##Final_data <- rbind(TPP1_final,USP7_final)
##Final_data <- rbind(Final_data,Blank_final)
#save the data
write.table(TPP1_final,'TPP1_final')
write.table(USP7_final,'USP7_final')
write.table(Blank_final,'Blank_final')
## move the files to another folder
file.copy('TPP1_final','analyse.R/')
file.copy('USP7_final','analyse.R/')
file.copy('Blank_final','analyse.R/')
unlink('TPP1_final')
unlink('USP7_final')
unlink('Blank_final')
sum_Tpp1 <- as.data.frame(table(TPP1_final$Accession)) %>%
filter(sum_Tpp1$Freq >= 4)
sum_Tpp1 <- as.data.frame(table(TPP1_final$Accession)) %>%
filter(sum_Tpp1$Freq >= 4)
sum_Tpp1 <- as.data.frame(table(TPP1_final$Accession))
sum_Tpp1 <- as.data.frame(table(TPP1_final$Accession)) %>%
filter(sum_Tpp1$Freq >= 4)
### in this section we select the proteins that exist the most times.As we delete
### one sample in TPP1 so we decide that if the protein appears more them 3 times
### we add it to an effective list.As for the others(USP7 and Blank),we set it to 4
### initial settings
library(tidyverse)
library(fs)
library(ggplot2)
library(readxl)
## now count the times of each the proteins that exist
sum_Tpp1 <- as.data.frame(table(TPP1_final$Accession)) %>%
filter(sum_Tpp1$Freq >= 4)
TPP1_3 <- TPP1_final %>% filter(TPP1_final$Accession =='A0A075B6S2')
for (proteins in sum_Tpp1$Var1[-1]) {
TPP1_3_R <- TPP1_final %>%
filter(TPP1_final$Accession == proteins)
TPP1_3 <- rbind(TPP1_3,TPP1_3_R)
}
#plot_TPP1 <-
### in this section we select the proteins that exist the most times.As we delete
### one sample in TPP1 so we decide that if the protein appears more them 3 times
### we add it to an effective list.As for the others(USP7 and Blank),we set it to 4
### initial settings
library(tidyverse)
library(fs)
library(ggplot2)
library(readxl)
## now count the times of each the proteins that exist
sum_Tpp1 <- as.data.frame(table(TPP1_final$Accession)) %>%
filter(sum_Tpp1$Freq >= 4)
TPP1_3 <- TPP1_final %>% filter(TPP1_final$Accession =='A6NHL2')
for (proteins in sum_Tpp1$Var1[-1]) {
TPP1_3_R <- TPP1_final %>%
filter(TPP1_final$Accession == proteins)
TPP1_3 <- rbind(TPP1_3,TPP1_3_R)
}
#plot_TPP1 <-
sum_Tpp1 <- as.data.frame(table(TPP1_final$Accession))
sum_Tpp1 <- as.data.frame(table(TPP1_final$Accession)) %>%
filter(sum_Tpp1$Freq >= 5)
for (filenames in 2:3) {
new.data <- read_xlsx(dirTPP1a[filenames]) %>%
mutate(sample,'TPP1-'filenames)
Temp1 <- rbind(Temp1,new.data)
}
for (filenames in 2:2) {
new.data <- read_xlsx(dirTPP1b[filenames])
Temp2 <- rbind(Temp2,new.data) %>%
mutate(sample,'TPP1-2')
}
TPP1_all <- rbind(Temp1,Temp2)
### now read all the TPP1 protein files and combine them into one file
for (filenames in 2:3) {
new.data <- read_xlsx(dirTPP1a[filenames]) %>%
mutate(sample='TPP1-',filenames)
Temp1 <- rbind(Temp1,new.data)
}
for (filenames in 2:2) {
new.data <- read_xlsx(dirTPP1b[filenames])
Temp2 <- rbind(Temp2,new.data) %>%
mutate(sample='TPP1-2')
}
TPP1_all <- rbind(Temp1,Temp2)
for (filenames in 2:3) {
new.data <- read_xlsx(dirTPP1a[filenames]) %>%
mutate(sample='TPP1-',filenames)
Temp1 <- rbind(Temp1,new.data)
}
for (filenames in 2:2) {
new.data <- read_xlsx(dirTPP1b[filenames]) %>%
mutate(sample='TPP1-',filenames)
Temp2 <- rbind(Temp2,new.data)
}
TPP1_all <- rbind(Temp1,Temp2)
for (filenames in 2:3) {
new.data <- read_xlsx(dirTPP1a[filenames]) %>%
mutate(sample='TPP1-'+filenames)
Temp1 <- rbind(Temp1,new.data)
}
for (filenames in 2:2) {
new.data <- read_xlsx(dirTPP1b[filenames]) %>%
mutate(sample='TPP1-'+filenames)
Temp2 <- rbind(Temp2,new.data)
}
TPP1_all <- rbind(Temp1,Temp2)
for (filenames in 2:3) {
new.data <- read_xlsx(dirTPP1a[filenames]) %>%
mutate(sample='TPP1-'+filenames)
Temp1 <- rbind(Temp1,new.data)
}
for (filenames in 2:2) {
new.data <- read_xlsx(dirTPP1b[filenames]) %>%
mutate(sample='TPP1-'+filenames)
Temp2 <- rbind(Temp2,new.data)
}
Temp1 <- read_xlsx(dirTPP1a[1]) %>%
mutate(sample = 'TPP1-1')
View(Temp1)
for (filenames in 2:3) {
new.data <- read_xlsx(dirTPP1a[filenames]) %>%
mutate(sample='TPP1-'+filenames)
Temp1 <- rbind(Temp1,new.data)
}
for (filenames in 2:2) {
new.data <- read_xlsx(dirTPP1b[filenames]) %>%
mutate(sample='TPP1-'+filenames)
Temp2 <- rbind(Temp2,new.data)
View(Temp1)
View(Temp1)
View(Temp1)
View(Temp1)
for (filenames in 2:3) {
new.data <- read_xlsx(dirTPP1a[filenames]) %>%
mutate(sample='TPP1-'+filenames)
Temp1 <- rbind(Temp1,new.data)
}
library(stringr)
library(stringr)
install.packages("stringr")
1
### initial settings
install.packages("stringr")
library(tidyverse)
library(fs)
library(ggplot2)
library(readxl)
library(stringr)
str_c('dwdwd',213)
str_c('dwdwd',213)
str_c('dwdwd',213
1
print(str_c('dwdwd',213))
### we found it is meaningless to compare the same proteins in different groups
### so we decide to make the different groups of each unique protein into one group
### and use them to do the clustering.
### initial settings
library(tidyverse)
library(fs)
library(ggplot2)
library(readxl)
### load the data
### as we supposed to editing the different kinds of the proteins and bind them
### so my solution is to load them respectively
## firstly we set the path of the 2 files to make it easier to read the files
savepleace <- 'analyse.R/'
path1 <- 'orgin.data/data/20220104'
path2 <- 'orgin.data/data/20220530'
## get all the file names in to list respectively
TPP1day1 <- list.files(path1,pattern = '^3FLAG-TPP1')
TPP1day2 <- list.files(path2,pattern = '^3FLAG-TPP1')
USP7day1 <- list.files(path1,pattern = '^3FLAG-USP7')
USP7day2 <- list.files(path1,pattern = '^3FLAG-USP7')
BLANkday1 <- list.files(path1,pattern = '^FLAGblank')
BLANkday2 <- list.files(path1,pattern = '^FLAGblank')
## editing the list to loop
dirTPP1a <- paste(path1,TPP1day1,sep = '/')
dirTPP1b <- paste(path2,TPP1day2,sep = '/')
dirUSP7a <- paste(path1,USP7day1,sep = '/')
dirUSP7b <- paste(path2,USP7day2,sep = '/')
dirBLANka <- paste(path1,BLANkday1,sep = '/')
dirBLANkb <- paste(path2,BLANkday1,sep = '/')
## set up the temp files to read the first of each protein files and make them
## as the samples to paste the rest of files after them
Temp1 <- read_xlsx(dirTPP1a[1]) %>%
mutate(sample = 'TPP1-1')
Temp2 <- read_xlsx(dirTPP1b[1])
Temp3 <- read_xlsx(dirUSP7a[1])
Temp4 <- read_xlsx(dirUSP7b[1])
Temp5 <- read_xlsx(dirBLANka[1])
Temp6 <- read_xlsx(dirBLANkb[1])
### now read all the TPP1 protein files and combine them into one file
for (filenames in 2:3) {
new.data <- read_xlsx(dirTPP1a[filenames]) %>%
mutate(sample=str_c('TPP1-',filenames))
Temp1 <- rbind(Temp1,new.data)
}
### we found it is meaningless to compare the same proteins in different groups
### so we decide to make the different groups of each unique protein into one group
### and use them to do the clustering.
### initial settings
library(tidyverse)
library(fs)
library(ggplot2)
library(readxl)
### load the data
### as we supposed to editing the different kinds of the proteins and bind them
### so my solution is to load them respectively
## firstly we set the path of the 2 files to make it easier to read the files
savepleace <- 'analyse.R/'
path1 <- 'orgin.data/data/20220104'
path2 <- 'orgin.data/data/20220530'
## get all the file names in to list respectively
TPP1day1 <- list.files(path1,pattern = '^3FLAG-TPP1')
TPP1day2 <- list.files(path2,pattern = '^3FLAG-TPP1')
USP7day1 <- list.files(path1,pattern = '^3FLAG-USP7')
USP7day2 <- list.files(path1,pattern = '^3FLAG-USP7')
BLANkday1 <- list.files(path1,pattern = '^FLAGblank')
BLANkday2 <- list.files(path1,pattern = '^FLAGblank')
## editing the list to loop
dirTPP1a <- paste(path1,TPP1day1,sep = '/')
dirTPP1b <- paste(path2,TPP1day2,sep = '/')
dirUSP7a <- paste(path1,USP7day1,sep = '/')
dirUSP7b <- paste(path2,USP7day2,sep = '/')
dirBLANka <- paste(path1,BLANkday1,sep = '/')
dirBLANkb <- paste(path2,BLANkday1,sep = '/')
## set up the temp files to read the first of each protein files and make them
## as the samples to paste the rest of files after them
Temp1 <- read_xlsx(dirTPP1a[1]) %>%
mutate(sample = 'TPP1-1')
Temp2 <- read_xlsx(dirTPP1b[1]) %>%
mutate(sample='TPP1-4')
Temp3 <- read_xlsx(dirUSP7a[1]) %>%
mutate(sample='USP7-1',)
Temp4 <- read_xlsx(dirUSP7b[1]) %>%
mutate(sample='USP7-4')
Temp5 <- read_xlsx(dirBLANka[1]) %>%
mutate(sample='blank-1')
Temp6 <- read_xlsx(dirBLANkb[1]) %>%
mutate(sample='blank-4')
### now read all the TPP1 protein files and combine them into one file
for (filenames in 2:3) {
new.data <- read_xlsx(dirTPP1a[filenames]) %>%
mutate(sample=str_c('TPP1-',filenames))
Temp1 <- rbind(Temp1,new.data)
}
for (filenames in 2:2) {
new.data <- read_xlsx(dirTPP1b[filenames]) %>%
mutate(sample=str_c('TPP1-',filenames))
Temp2 <- rbind(Temp2,new.data)
}
TPP1_all <- rbind(Temp1,Temp2)
### next step to editing the USP7 files
for (filenames in 2:3) {
new.data <- read_xlsx(dirUSP7a[filenames]) %>%
mutate(sample=str_c('USP7-',filenames))
Temp3 <- rbind(Temp3,new.data)
}
for (filenames in 2:3) {
new.data <- read_xlsx(dirUSP7b[filenames]) %>%
mutate(sample=str_c('USP7-',filenames))
Temp4 <- rbind(Temp4,new.data)
}
USP7_all <- rbind(Temp3,Temp4)
### finally the blank samples
for (filenames in 2:3) {
new.data <- read_xlsx(dirBLANka[filenames]) %>%
mutate(sample=str_c('blank-',filenames))
Temp5 <- rbind(Temp5,new.data)
}
for (filenames in 2:3) {
new.data <- read_xlsx(dirBLANkb[filenames]) %>%
mutate(sample=str_c('blank-',filenames))
Temp6 <- rbind(Temp6,new.data)
}
Blank_all <- rbind(Temp5,Temp6)
## select the data we need and add some labels for the color of the later plot
## firstly the TPP1 data
TPP1_final <- TPP1_all %>%
select(1,2,5,7) %>%
mutate(protein= 'TPP1') %>%
filter(`Protein FDR Confidence` == 'High')
## then the USP7 data
USP7_final <- USP7_all %>%
select(1,2,5,7) %>%
mutate(protein = 'USP7') %>%
filter(`Protein FDR Confidence` == 'High')
## finally the BLANK samples
Blank_final <- Blank_all %>%
select(1,2,5,7) %>%
mutate(protein = 'Blank') %>%
filter(`Protein FDR Confidence` == 'High')
##Final_data <- rbind(TPP1_final,USP7_final)
##Final_data <- rbind(Final_data,Blank_final)
#save the data
write.table(TPP1_final,'TPP1_final')
write.table(USP7_final,'USP7_final')
write.table(Blank_final,'Blank_final')
## move the files to another folder
file.copy('TPP1_final','analyse.R/')
file.copy('USP7_final','analyse.R/')
file.copy('Blank_final','analyse.R/')
unlink('TPP1_final')
unlink('USP7_final')
unlink('Blank_final')
View(Temp1)
View(TPP1_final)
View(TPP1_final)
View(TPP1_all)
View(TPP1_all)
### we found it is meaningless to compare the same proteins in different groups
### so we decide to make the different groups of each unique protein into one group
### and use them to do the clustering.
### initial settings
library(tidyverse)
library(fs)
library(ggplot2)
library(readxl)
### load the data
### as we supposed to editing the different kinds of the proteins and bind them
### so my solution is to load them respectively
## firstly we set the path of the 2 files to make it easier to read the files
savepleace <- 'analyse.R/'
path1 <- 'orgin.data/data/20220104'
path2 <- 'orgin.data/data/20220530'
## get all the file names in to list respectively
TPP1day1 <- list.files(path1,pattern = '^3FLAG-TPP1')
TPP1day2 <- list.files(path2,pattern = '^3FLAG-TPP1')
USP7day1 <- list.files(path1,pattern = '^3FLAG-USP7')
USP7day2 <- list.files(path1,pattern = '^3FLAG-USP7')
BLANkday1 <- list.files(path1,pattern = '^FLAGblank')
BLANkday2 <- list.files(path1,pattern = '^FLAGblank')
## editing the list to loop
dirTPP1a <- paste(path1,TPP1day1,sep = '/')
dirTPP1b <- paste(path2,TPP1day2,sep = '/')
dirUSP7a <- paste(path1,USP7day1,sep = '/')
dirUSP7b <- paste(path2,USP7day2,sep = '/')
dirBLANka <- paste(path1,BLANkday1,sep = '/')
dirBLANkb <- paste(path2,BLANkday1,sep = '/')
## set up the temp files to read the first of each protein files and make them
## as the samples to paste the rest of files after them
Temp1 <- read_xlsx(dirTPP1a[1]) %>%
mutate(sample = 'TPP1-1')
Temp2 <- read_xlsx(dirTPP1b[1]) %>%
mutate(sample='TPP1-4')
Temp3 <- read_xlsx(dirUSP7a[1]) %>%
mutate(sample='USP7-1',)
Temp4 <- read_xlsx(dirUSP7b[1]) %>%
mutate(sample='USP7-4')
Temp5 <- read_xlsx(dirBLANka[1]) %>%
mutate(sample='blank-1')
Temp6 <- read_xlsx(dirBLANkb[1]) %>%
mutate(sample='blank-4')
### now read all the TPP1 protein files and combine them into one file
for (filenames in 2:3) {
new.data <- read_xlsx(dirTPP1a[filenames]) %>%
mutate(sample=str_c('TPP1-',filenames))
Temp1 <- rbind(Temp1,new.data)
}
for (filenames in 2:2) {
new.data <- read_xlsx(dirTPP1b[filenames]) %>%
mutate(sample=str_c('TPP1-',filenames))
Temp2 <- rbind(Temp2,new.data)
}
TPP1_all <- rbind(Temp1,Temp2)
### next step to editing the USP7 files
for (filenames in 2:3) {
new.data <- read_xlsx(dirUSP7a[filenames]) %>%
mutate(sample=str_c('USP7-',filenames))
Temp3 <- rbind(Temp3,new.data)
}
for (filenames in 2:3) {
new.data <- read_xlsx(dirUSP7b[filenames]) %>%
mutate(sample=str_c('USP7-',filenames))
Temp4 <- rbind(Temp4,new.data)
}
USP7_all <- rbind(Temp3,Temp4)
### finally the blank samples
for (filenames in 2:3) {
new.data <- read_xlsx(dirBLANka[filenames]) %>%
mutate(sample=str_c('blank-',filenames))
Temp5 <- rbind(Temp5,new.data)
}
for (filenames in 2:3) {
new.data <- read_xlsx(dirBLANkb[filenames]) %>%
mutate(sample=str_c('blank-',filenames))
Temp6 <- rbind(Temp6,new.data)
}
Blank_all <- rbind(Temp5,Temp6)
## select the data we need and add some labels for the color of the later plot
## firstly the TPP1 data
TPP1_final <- TPP1_all %>%
select(1,2,5,7,13) %>%
mutate(protein= 'TPP1') %>%
filter(`Protein FDR Confidence` == 'High')
## then the USP7 data
USP7_final <- USP7_all %>%
select(1,2,5,7,13) %>%
mutate(protein = 'USP7') %>%
filter(`Protein FDR Confidence` == 'High')
## finally the BLANK samples
Blank_final <- Blank_all %>%
select(1,2,5,7,13) %>%
mutate(protein = 'Blank') %>%
filter(`Protein FDR Confidence` == 'High')
##Final_data <- rbind(TPP1_final,USP7_final)
##Final_data <- rbind(Final_data,Blank_final)
#save the data
write.table(TPP1_final,'TPP1_final')
write.table(USP7_final,'USP7_final')
write.table(Blank_final,'Blank_final')
## move the files to another folder
file.copy('TPP1_final','analyse.R/')
file.copy('USP7_final','analyse.R/')
file.copy('Blank_final','analyse.R/')
unlink('TPP1_final')
unlink('USP7_final')
unlink('Blank_final')
TPP1_3 <- TPP1_final
sum_Tpp1 <- as.data.frame(table(TPP1_final$Accession))
sum_Tpp1 <- as.data.frame(table(TPP1_final$Accession)) %>%
filter(sum_Tpp1$Freq >= 5)
### initial settings
library(tidyverse)
library(fs)
library(ggplot2)
library(readxl)
## now count the times of each the proteins that exist
sum_Tpp1 <- as.data.frame(table(TPP1_final$Accession)) %>%
filter(sum_Tpp1$Freq >= 5)
TPP1_3 <- TPP1_final %>% filter(TPP1_final$Accession =='O14744')
for (proteins in sum_Tpp1$Var1[-1]) {
TPP1_3_R <- TPP1_final %>%
filter(TPP1_final$Accession == proteins)
TPP1_3 <- rbind(TPP1_3,TPP1_3_R)
}
plot_TPP1 <-
ggplot(TPP1_3,aes(x= TPP1_3$`# PSMs`,y=TPP1_3$Coverage),color =sample) +geom_point
library(tidyverse)
library(fs)
library(ggplot2)
library(readxl)
plot_TPP1 <-
ggplot(TPP1_3,aes(x= TPP1_3$`# PSMs`,y=TPP1_3$Coverage),color =sample) +geom_point
plot_TPP1 <-
ggplot(TPP1_3,aes(x= TPP1_3$`# PSMs`,y=TPP1_3$Coverage),color =sample) +geom_point()
plot_TPP1 <-
ggplot(TPP1_3,aes(x= TPP1_3$`# PSMs`,y=TPP1_3$Coverage),color =sample) +geom_point()
## make the plot
names(TPP1_3) <- c('confidence','Accession','coverage','PSMs','sample','protein')
## make the plot
names(TPP1_3) <- c('confidence','Accession','coverage','PSMs','sample','protein')
plot_TPP1 <-
ggplot(data = TPP1_3,
mapping = aes(x=TPP1_3$PSMs,
y=TPP1_3$coverage,
colours=TPP1_3$sample,
xlab='PSMs',
ylab='coverage'))+ geom_point()
names(TPP1_3) <- c('confidence','Accession','coverage','PSMs','sample','protein')
plot_TPP1 <-
ggplot(data = TPP1_3,
mapping = aes(x=TPP1_3$PSMs,
y=TPP1_3$coverage,
colours=TPP1_3$sample,
xlab='PSMs',
ylab='coverage'))+ geom_point()
## make the plot
names(TPP1_3) <- c('confidence','Accession','coverage','PSMs','sample','protein')
plot_TPP1 <-
ggplot(data = TPP1_3,
mapping = aes(x=TPP1_3$PSMs[0:20],
y=TPP1_3$coverage[0:20],
colours=TPP1_3$sample,
xlab='PSMs',
ylab='coverage'))+ geom_point()
plot_TPP1 <-
ggplot(data = TPP1_3,
mapping = aes(x=TPP1_3$PSMs[0:20],
y=TPP1_3$coverage[0:20],
colours=TPP1_3$sample
))+ geom_point()
